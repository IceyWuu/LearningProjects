import torch

#Creating and accessing tensors
c = None
################################################################################
# TODO: Construct a tensor c filled with all zeros, initializing from nested   #
# Python lists.                                                                #
################################################################################
# Replace "pass" statement with your code
c = torch.tensor([[0,0],[0,0],[0,0]])
################################################################################
#                              END OF YOUR CODE                                #
################################################################################
print('c is a tensor: ', torch.is_tensor(c))
print('Correct shape: ', c.shape == (3, 2))
print('All zeros: ', (c == 0).all().item() == 1)

################################################################################
# TODO: Set element (0, 1) of c to 10, and element (1, 0) of c to 100.         #
################################################################################
# Replace "pass" statement with your code
c[0,1] = 10
c[1,0] = 100
################################################################################
#                              END OF YOUR CODE                                #
################################################################################
print('\nAfter mutating:')
print('Correct shape: ', c.shape == (3, 2))
print('c[0, 1] correct: ', c[0, 1] == 10)
print('c[1, 0] correct: ', c[1, 0] == 100)
print('Rest of c is still zero: ', (c == 0).sum().item() == 4)
